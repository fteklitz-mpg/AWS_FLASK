print("")
print("****************************")
print("* Collections: Lists, Tuples, and Sets")
print("* A collection is a variable with multiple items for different use cases")
print("****************************")
print("")
print("****************************")
print("* A list has elements can be changed with the order of the elements guaranteed")
print("* Use care: Priority ranked collections in loops and OO using subset notation")
print("****************************")
print("")
print("* Print code: list_l = ['bob', 'tom', 'bill']")
print("")

list_l = ['bob', 'tom', 'bill']
print (list_l)

print("")
print("****************************")
print("* tuple elements are fixed and cannot be changed, order is guaranteed")
print("* Use care: Priority ranked collections in loops and OO using subset notation")
print("****************************")
print("")
print("* Print code: tuple_t = ('jane', 'jan', 'joy')")
print("")

tuple_t = ('jane', 'jan', 'joy')
print (tuple_t)

print("")
print("****************************")
print("* set elements must be unique, which prevents duplication")
print("* order is not guaranteed; cannot use subscript notation")
print("****************************")
print("")
print("* Print code: set_s = {'larry', 'mary', 'cary'}")
print("")

set_s = {'larry', 'mary', 'cary'}
print(set_s)

print("")
print("****************************")
print("* Subscription Notation: variable[value]")
print("* order is not guaranteed; cannot use subscript notation")
print("****************************")
print("")
print("* Print code: print(list_l[0])")
print("")

print(list_l)
print(list_l[0])

print("")
print("* Print code: print(tuple_t[2])")
print("")

print(tuple_t)
print(tuple_t[2])
print("")
print("****************************")
print("")
